<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="16" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="873" started-at="2019-10-30T23:36:36Z" finished-at="2019-10-30T23:36:37Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="873" started-at="2019-10-30T23:36:36Z" finished-at="2019-10-30T23:36:37Z">
      <class name="com.linecode.ddd.docente.DocenteServicoUnitTest">
        <test-method status="PASS" signature="configurarContexto()[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="configurarContexto" is-config="true" duration-ms="667" started-at="2019-10-30T20:36:36Z" finished-at="2019-10-30T20:36:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configurarContexto -->
        <test-method status="PASS" signature="testCadastrarDocente(com.linecode.docente.cmd.CadastroDocenteCmd, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testCadastrarDocente" duration-ms="8" started-at="2019-10-30T20:36:36Z" data-provider="testCadastrarDocenteDataProvider" finished-at="2019-10-30T20:36:36Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[Informe os dados do docente]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCadastrarDocente -->
        <test-method status="PASS" signature="testCadastrarDocente(com.linecode.docente.cmd.CadastroDocenteCmd, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testCadastrarDocente" duration-ms="90" started-at="2019-10-30T20:36:36Z" data-provider="testCadastrarDocenteDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.linecode.docente.cmd.CadastroDocenteCmd@338494fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Informe o e-mail./E-mail inválido.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCadastrarDocente -->
        <test-method status="PASS" signature="testCadastrarDocente(com.linecode.docente.cmd.CadastroDocenteCmd, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testCadastrarDocente" duration-ms="3" started-at="2019-10-30T20:36:37Z" data-provider="testCadastrarDocenteDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.linecode.docente.cmd.CadastroDocenteCmd@4d098f9b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Informe o e-mail./E-mail inválido.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCadastrarDocente -->
        <test-method status="PASS" signature="testCadastrarDocente(com.linecode.docente.cmd.CadastroDocenteCmd, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testCadastrarDocente" duration-ms="2" started-at="2019-10-30T20:36:37Z" data-provider="testCadastrarDocenteDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.linecode.docente.cmd.CadastroDocenteCmd@7fc44dec]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Informe o e-mail./E-mail inválido.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCadastrarDocente -->
        <test-method status="PASS" signature="testCadastrarDocente(com.linecode.docente.cmd.CadastroDocenteCmd, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testCadastrarDocente" duration-ms="18" started-at="2019-10-30T20:36:37Z" data-provider="testCadastrarDocenteDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.linecode.docente.cmd.CadastroDocenteCmd@2692b61e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Informe o nome do docente]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCadastrarDocente -->
        <test-method status="PASS" signature="testCadastrarDocente(com.linecode.docente.cmd.CadastroDocenteCmd, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testCadastrarDocente" duration-ms="3" started-at="2019-10-30T20:36:37Z" data-provider="testCadastrarDocenteDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.linecode.docente.cmd.CadastroDocenteCmd@4f2613d1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Informe o nome do docente]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCadastrarDocente -->
        <test-method status="PASS" signature="testCadastrarDocente(com.linecode.docente.cmd.CadastroDocenteCmd, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testCadastrarDocente" duration-ms="3" started-at="2019-10-30T20:36:37Z" data-provider="testCadastrarDocenteDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[com.linecode.docente.cmd.CadastroDocenteCmd@65a4798f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Informe o nome do docente]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCadastrarDocente -->
        <test-method status="PASS" signature="testGetDocentePorEmailSenha(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testGetDocentePorEmailSenha" duration-ms="7" started-at="2019-10-30T20:36:37Z" data-provider="testGetDocentePorEmailSenhaDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[mofusenha]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Informe o email para efetuar o login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocentePorEmailSenha -->
        <test-method status="PASS" signature="testGetDocentePorEmailSenha(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testGetDocentePorEmailSenha" duration-ms="3" started-at="2019-10-30T20:36:37Z" data-provider="testGetDocentePorEmailSenhaDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mofusenha]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Informe o email para efetuar o login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocentePorEmailSenha -->
        <test-method status="PASS" signature="testGetDocentePorEmailSenha(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testGetDocentePorEmailSenha" duration-ms="2" started-at="2019-10-30T20:36:37Z" data-provider="testGetDocentePorEmailSenhaDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[   ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mofusenha]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Informe o email para efetuar o login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocentePorEmailSenha -->
        <test-method status="PASS" signature="testGetDocentePorEmailSenha(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testGetDocentePorEmailSenha" duration-ms="1" started-at="2019-10-30T20:36:37Z" data-provider="testGetDocentePorEmailSenhaDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mofu@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[Informe a senha para efetuar o login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocentePorEmailSenha -->
        <test-method status="PASS" signature="testGetDocentePorEmailSenha(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testGetDocentePorEmailSenha" duration-ms="1" started-at="2019-10-30T20:36:37Z" data-provider="testGetDocentePorEmailSenhaDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mofu@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Informe a senha para efetuar o login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocentePorEmailSenha -->
        <test-method status="PASS" signature="testGetDocentePorEmailSenha(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testGetDocentePorEmailSenha" duration-ms="1" started-at="2019-10-30T20:36:37Z" data-provider="testGetDocentePorEmailSenhaDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mofu@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[   ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Informe a senha para efetuar o login]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocentePorEmailSenha -->
        <test-method status="PASS" signature="testGetListaSugestaoDocente(java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testGetListaSugestaoDocente" duration-ms="3" started-at="2019-10-30T20:36:37Z" data-provider="testGetListaSugestaoDocenteDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.linecode.compartilhado.excecao.ExcecaoNegocio">
            <message>
              <![CDATA[Informe o nome da consulta.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.linecode.compartilhado.excecao.ExcecaoNegocio: Informe o nome da consulta.
	at com.linecode.docente.servico.DocenteServico.getListaSugestaoDocente(DocenteServico.java:119)
	at com.linecode.ddd.docente.DocenteServicoUnitTest.testGetListaSugestaoDocente(DocenteServicoUnitTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.linecode.compartilhado.excecao.ExcecaoNegocio -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetListaSugestaoDocente -->
        <test-method status="PASS" signature="testGetListaSugestaoDocente(java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testGetListaSugestaoDocente" duration-ms="4" started-at="2019-10-30T20:36:37Z" data-provider="testGetListaSugestaoDocenteDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="com.linecode.compartilhado.excecao.ExcecaoNegocio">
            <message>
              <![CDATA[Informe o nome da consulta.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.linecode.compartilhado.excecao.ExcecaoNegocio: Informe o nome da consulta.
	at com.linecode.docente.servico.DocenteServico.getListaSugestaoDocente(DocenteServico.java:119)
	at com.linecode.ddd.docente.DocenteServicoUnitTest.testGetListaSugestaoDocente(DocenteServicoUnitTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.linecode.compartilhado.excecao.ExcecaoNegocio -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetListaSugestaoDocente -->
        <test-method status="PASS" signature="testGetListaSugestaoDocente(java.lang.String)[pri:0, instance:com.linecode.ddd.docente.DocenteServicoUnitTest@4988d8b8]" name="testGetListaSugestaoDocente" duration-ms="2" started-at="2019-10-30T20:36:37Z" data-provider="testGetListaSugestaoDocenteDataProvider" finished-at="2019-10-30T20:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[   ]]>
              </value>
            </param>
          </params>
          <exception class="com.linecode.compartilhado.excecao.ExcecaoNegocio">
            <message>
              <![CDATA[Informe o nome da consulta.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.linecode.compartilhado.excecao.ExcecaoNegocio: Informe o nome da consulta.
	at com.linecode.docente.servico.DocenteServico.getListaSugestaoDocente(DocenteServico.java:119)
	at com.linecode.ddd.docente.DocenteServicoUnitTest.testGetListaSugestaoDocente(DocenteServicoUnitTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.linecode.compartilhado.excecao.ExcecaoNegocio -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetListaSugestaoDocente -->
      </class> <!-- com.linecode.ddd.docente.DocenteServicoUnitTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
